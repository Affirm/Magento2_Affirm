<?php
/**
 *
 *  * BSD 3-Clause License
 *  *
 *  * Copyright (c) 2018, Affirm
 *  * All rights reserved.
 *  *
 *  * Redistribution and use in source and binary forms, with or without
 *  * modification, are permitted provided that the following conditions are met:
 *  *
 *  *  Redistributions of source code must retain the above copyright notice, this
 *  *   list of conditions and the following disclaimer.
 *  *
 *  *  Redistributions in binary form must reproduce the above copyright notice,
 *  *   this list of conditions and the following disclaimer in the documentation
 *  *   and/or other materials provided with the distribution.
 *  *
 *  *  Neither the name of the copyright holder nor the names of its
 *  *   contributors may be used to endorse or promote products derived from
 *  *   this software without specific prior written permission.
 *  *
 *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 *  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 *  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
?>
<?php

$action = $this->getRequest()->getFullActionName();

$pixelCode = array();

//Product List Or Category Page Or Search results viewed
if (($action == 'catalogsearch_result_index' || $action == 'catalogsearch_advanced') && ($block->isSearchTrackPixelEnabled())) {

    $queryString = $this->getQueryString();
    if($queryString) {

        $pixelCode['method'] = 'trackProductsSearched';
        $pixelCode['parameter'][0] = $queryString;
    }
}

if (($action == 'catalog_category_view' || $action == 'catalogsearch_result_index') && ($block->isProductListTrackPixelEnabled())) {
    $productListData = $this->getCategoryData();

    if($productListData) {
        $categoryId = isset($productListData['categoryId']) ? $productListData['categoryId'] : '';
        $categoryName = isset($productListData['categoryName']) ? $productListData['categoryName'] : '';

        $pixelCode['method'] = 'trackProductListViewed';
        $pixelCode['parameter'][0] = array();
        $pixelCode['parameter'][0]['listId'] = $categoryId;
        $pixelCode['parameter'][0]['category'] = $categoryName;
    }
    $pixelCode['parameter'][1] = array();
}

// Product detail view
if ($action == 'catalog_product_view' && $block->isProductViewTrackPixelEnabled() ) {

    $productData = $this->getProductData();

    if($productData) {
        $name = isset($productData['name']) ? $productData['name'] : '';
        $productId = isset($productData['productId']) ? $productData['productId'] : '';
        $currency = isset($productData['currency']) ? $productData['currency'] : '';
        $price = isset($productData['price']) ? $productData['price'] : '';

        $pixelCode['method'] = 'trackProductViewed';
        $pixelCode['parameter'][0] = array();
        $pixelCode['parameter'][0]['name'] = $name;
        $pixelCode['parameter'][0]['productId'] = $productId;
        $pixelCode['parameter'][0]['currency'] = $currency;
        $pixelCode['parameter'][0]['price'] = $price;
    }

    if($block->isAddCartTrackPixelEnabled()){
    ?>
    <script>
        require([
            'jquery'
        ],function($){
            $('#product-addtocart-button').click(function () {

                affirm.analytics.trackProductAdded({
                    name: '<?php echo $name ?>',
                    productId: '<?php echo $productId ?>',
                    currency: '<?php echo $currency ?>',
                    price: <?php echo $price ?>
                });
            });
        });
    </script>
    <?php
    }
}

if ($action == 'checkout_cart_index' && ($block->isAddCartTrackPixelEnabled())) {
    //Cart viewed
    $cartProductsData = $this->getCartData();

    if($cartProductsData) {

        $pixelCode['method'] = 'trackCartViewed';
        $pixelCode['parameter'][0] = array();

        $products = array();

        foreach ($cartProductsData as $cartProduct) {
            $name = isset($cartProduct['name']) ? $cartProduct['name'] : '';
            $productId = isset($cartProduct['productId']) ? $cartProduct['productId'] : '';
            $currency = isset($cartProduct['currency']) ? $cartProduct['currency'] : '';
            $price = isset($cartProduct['price']) ? $cartProduct['price'] : '';
            $quantity = isset($cartProduct['quantity']) ? $cartProduct['quantity'] : '';

            $product = array();
            $product['name'] = $name;
            $product['productId'] = $productId;
            $product['currency'] = $currency;
            $product['price'] = $price;
            $product['quantity'] = $quantity;

            $products[] = $product;
        }
        $pixelCode['parameter'][0] = $products;
    }
}

if (($action == 'checkout_index_index' || $action == 'onepagecheckout_index_index' || $action == 'onestepcheckout_index_index' || $action == 'opc_index_index') && ($block->isAddChkStartTrackPixelEnabled())) {

    $quoteData = $this->getQuoteData();
    $pixelCode = array();

    if($quoteData) {

        $checkoutId = isset($quoteData['checkoutId']) ? $quoteData['checkoutId'] : '';
        $orderId = isset($quoteData['orderId']) ? $quoteData['orderId'] : '';
        $currency = isset($quoteData['currency']) ? $quoteData['currency'] : '';
        $total = isset($quoteData['total']) ? $quoteData['total'] : '';
        $paymentMethod = isset($quoteData['paymentMethod']) ? $quoteData['paymentMethod'] : '';

        $pixelCode['method'] = 'trackCheckoutStarted';
        $pixelCode['parameter'][0] = array();
        $pixelCode['parameter'][0]['checkoutId'] = $checkoutId;
        $pixelCode['parameter'][0]['currency'] = $currency;
        $pixelCode['parameter'][0]['total'] = $total;

        $quoteProductsData = $this->getQuoteProductsData();

        if($quoteProductsData) {
            $products = array();

            foreach ($quoteProductsData as $cartProduct) {

                $name = isset($cartProduct['name']) ? $cartProduct['name'] : '';
                $productId = isset($cartProduct['productId']) ? $cartProduct['productId'] : '';
                $currency = isset($cartProduct['currency']) ? $cartProduct['currency'] : '';
                $price = isset($cartProduct['price']) ? $cartProduct['price'] : '';
                $quantity = isset($cartProduct['quantity']) ? $cartProduct['quantity'] : '';

                $product = array();
                $product['name'] = $name;
                $product['productId'] = $productId;
                $product['currency'] = $currency;
                $product['price'] = $price;
                $product['quantity'] = $quantity;
                $products[] = $product;
            }
            $pixelCode['parameter'][1] = $products;
        }
    }
}
$pixelCode['pixelConfig'] = $block->getOptions();
$serializedPixelCode = $this->helper('Magento\Framework\Json\Helper\Data')->jsonEncode($pixelCode);

?>

<!-- BEGIN AFFIRM ANALYTICS CODE -->
<script type="text/x-magento-init">
{"*": {
        "affirmPixel": <?php echo $serializedPixelCode ?>
    }
}
</script>
<!-- END AFFIRM ANALYTICS CODE -->
